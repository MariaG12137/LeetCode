/*
You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.
*/
var addTwoNumbers = function(l1, l2) {
    
    if(!l1 && !l2){
        return null
    }
    if(!l2){
        return l1
    }
    if(!l1){
        return l2
    }
    let result = new ListNode();
    let p1 = l1;
    let p2 = l2;
    let r = result;
    let incre = 0;
    let length1 = 0;
    let length2 = 0;
    
    while(p1.next !== null){
        length1++;
        p1 = p1.next;
    }
    while(p2.next !== null){
        length2++;
        p2 = p2.next
    }
    if(length1>length2){
        for(let i=0; i<Math.abs(length1-length2); i++){
            p2.next = new ListNode(0);
            p2 = p2.next
        }
    }else{
        for(let i=0; i<Math.abs(length1-length2); i++){
            p1.next = new ListNode(0);
            p1 = p1.next
        }
    }
    p1 = l1;
    p2 = l2;
    
    console.log(p1,p2);
    
    while(p1!==null && p2!==null){
        if(p1.val+p2.val+incre<10){
            r.next = new ListNode(p1.val+p2.val+incre);
            r = r.next;
            incre = 0;
        }else{
            r.next = new ListNode(p1.val+p2.val+incre-10);
            r = r.next;
            incre = 1;
        }
        p1 = p1.next;
        p2 = p2.next;
    }
    if(incre == 1){
        r.next = new ListNode(1)
    }
    return result.next
};
