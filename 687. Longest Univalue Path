Given a binary tree, find the length of the longest path where each node in the path 
has the same value. This path may or may not pass through the root.

The length of path between two nodes is represented by the number of edges between them.
var longestUnivaluePath = function(root) {
    let max = 0;
 
    function inorderTraverse(node){
        if(!node){
            return 0;
        }
        
        let leftLen = 0;
        let rightLen = 0;
        let left = inorderTraverse(node.left);
        let right = inorderTraverse(node.right);
        
        if(node.left && node.left.val === node.val){
            leftLen = 1+left;
        }
        if(node.right && node.right.val === node.val){
            rightLen = 1+right;
        }
        
        max = Math.max(max,leftLen+rightLen);
        return Math.max(leftLen,rightLen)
        
    }
    inorderTraverse(root);
    return max
}
 
