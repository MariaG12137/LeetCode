/*
Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.
*/
var maxSubArray = function(nums) {
    let sum = nums[0];
    let maxSum = nums[0];
    
    for(let i=1; i<nums.length;i++){
        sum = Math.max(nums[i],sum+nums[i]); //make a local decision: add or don't add the next number?
        maxSum = Math.max(maxSum,sum); //then, compare with the overall maxSum
    }
    return maxSum;
};

var maxSubArray = function(nums) {
    function findMax(sum,next){
        let total = sum+next; //total is current+next
        return sum = Math.max(total,next); //local compare options
    }
    let maxSum = nums[0];
    let sum = nums[0];
    
    for(let i=0; i<nums.length-1;i++){
        sum = findMax(sum,nums[i+1]); //get result of local comparison
        maxSum = Math.max(sum,maxSum); //compare with overall sum
    }
    return maxSum
    
    };
===================================================================================================================================
//second submission
var maxSubArray = function(nums) {

    let maxSum = -Infinity;
    let sum = -Infinity;
    for(let num of nums){
        sum = Math.max(num,sum+num);
        maxSum = Math.max(maxSum,sum)
    }
    return maxSum  
};
