/*
Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.

Note: For the purpose of this problem, we define empty string as valid palindrome.
*/
var isPalindrome = function(s) {
    if (s.length < 2) return true;
  // const wordChar = s.replace(/\W/g, "");
    const letterRange = s.replace(/[^a-zA-Z0-9]/g, "").toLowerCase(); //remove everything other than a-zA-Z0-9
    console.log(letterRange);
    for(let i =0; i<Math.floor(letterRange.length/2);i++){
        if(letterRange[i].charCodeAt(0) !== letterRange[letterRange.length-1-i].charCodeAt(0)){
            return false;
        }
    }
    return true;
};
=============================================================================================================================================

var isPalindrome = function(s) {
  // const wordChar = s.replace(/\W/g, "");
    const letterRange = s.replace(/[^a-zA-Z0-9]/g, "").toLowerCase();

    let left = 0;
    let right = 0;
    
    if(letterRange.length%2 == 1){
        left = Math.floor(letterRange.length/2);
        right = Math.floor(letterRange.length/2)
    }else{
        left = Math.floor(letterRange.length/2)-1;
        right = Math.floor(letterRange.length/2)
    }
    
    function spread(left, right){
        while(left !== -1){
            if(letterRange[left] !== letterRange[right]){
                return false
            }
            left--;
            right++
        }
        return true;
    }
    return spread(left,right)
};
