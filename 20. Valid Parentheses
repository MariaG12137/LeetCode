/*
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.
*/
var isValid = function(s) {
    let stack = [];
    let keys = {
        "(":")",
        "{":"}",
        "[":"]",
    };
    
    for (const char of s){
        if (char in keys){
            stack.push(keys[char]);
        }else{
            if(stack.length===0 ||stack.pop() !== char){
                return false;
            }
        }
    }
    return stack.length ===0;
    
};
=======================================================================================================================
//second submission
var isValid = function(s) {
    const map = new Map();
    map.set('(',')').set('{','}').set('[',']');
    let stack = [];
    for(let char of s){
        if(map.has(char)){
            stack.push(char);
        }else if(stack.length==0 || map.get(stack.pop())!== char){
            return false
        }
    }
    return stack.length === 0;
};
